- name: ..... create SVM "{{ item.svm_name }}" 

  netapp.ontap.na_ontap_svm:

    hostname: "{{ cluster_hostname }}"
    username: "{{ cluster_username }}"
    password: "{{ cluster_password }}"
    https: true
    validate_certs: false

    state: present
    name: "{{ item.svm_name }}"
    root_volume: "{{ item.svm_root_vol }}"
    root_volume_aggregate: "{{ item.svm_aggregate }}"
    root_volume_security_style: "{{ 'ntfs' if item.svm_protocol.lower() is search('cifs') else 'unix' }}"
    aggr_list: "*"
    allowed_protocols: "{{ item.svm_protocol }}"

- name: ..... Disable SNMP

  netapp.ontap.na_ontap_svm_options:

    hostname: "{{ cluster_hostname }}"
    username: "{{ cluster_username }}"
    password: "{{ cluster_password }}"
    https: true
    validate_certs: false

    vserver: "{{ current_cluster_name }}"
    name: snmp.enable
    value: "off"

- name: ..... setup FCP

  netapp.ontap.na_ontap_fcp:

    hostname: "{{ cluster_hostname }}"
    username: "{{ cluster_username }}"
    password: "{{ cluster_password }}"
    https: true
    validate_certs: false

    state: present
    service_state: started
    vserver: "{{ item.svm_name }}"

  when: 
    - item.svm_protocol.lower() is search("fcp")

- name: ..... setup iSCSI

  netapp.ontap.na_ontap_iscsi:

    hostname: "{{ cluster_hostname }}"
    username: "{{ cluster_username }}"
    password: "{{ cluster_password }}"
    https: true
    validate_certs: false

    state: present
    service_state: started
    vserver: "{{ item.svm_name }}"
    ontapi: "{{ details.ontap_info.ontap_version }}"

  when: 
    - item.svm_protocol.lower() is search("iscsi")

- name: ..... setup NFS (1)

  netapp.ontap.na_ontap_nfs:

    hostname: "{{ cluster_hostname }}"
    username: "{{ cluster_username }}"
    password: "{{ cluster_password }}"
    https: true
    validate_certs: false

    state: present
    service_state: started
    vserver: "{{ item.svm_name }}"
    nfsv3: enabled
    nfsv4: disabled
    nfsv41: disabled
    tcp: enabled
    udp: enabled
    vstorage_state: disabled

  when: 
    - item.svm_protocol.lower() is search("nfs")
    - details.ontap_info.ontap_version > "120"

- name: ..... setup NFS (2)

  netapp.ontap.na_ontap_nfs:

    hostname: "{{ cluster_hostname }}"
    username: "{{ cluster_username }}"
    password: "{{ cluster_password }}"
    https: true
    validate_certs: false

    state: present
    service_state: started
    vserver: "{{ item.svm_name }}"
    nfsv3: enabled
    nfsv4: disabled
    nfsv41: disabled
    vstorage_state: disabled

  when: 
    - item.svm_protocol.lower() is search("nfs")
    - details.ontap_info.ontap_version < "130"

- name: ..... add rule to default export policy

  netapp.ontap.na_ontap_export_policy_rule:

    hostname: "{{ cluster_hostname }}"
    username: "{{ cluster_username }}"
    password: "{{ cluster_password }}"
    https: true
    validate_certs: false

    state: present
    policy_name: default
    vserver: "{{ item.svm_name }}"
    client_match: "0.0.0.0/0"
    ro_rule: any
    rw_rule: none
    protocol: any

  when:
    - item.svm_protocol.lower() is search("nfs")
